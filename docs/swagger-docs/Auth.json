{
    "basePath": "http://development.asynonymous.net/Molotov/api",
    "swaggerVersion": "1.2",
    "apiVersion": "1.0.0",
    "resourcePath": "/Auth",
    "apis": [
        {
            "path": "/Auth/ActivateUser",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Email confirmation check",
                    "nickname": "ActivateUser",
                    "type": "void",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "email",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "email of the user requesting activation"
                        },
                        {
                            "paramType": "query",
                            "name": "activation_key",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "activation_key from confirmation email"
                        }
                    ],
                    "notes": "When you sign up an email is set to verify the email address, this function handles the verification step",
                    "authorizations": {}
                }
            ]
        },
        {
            "path": "/Auth/AddUser",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Creates a new user",
                    "nickname": "addUser",
                    "type": "void",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "email",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "email of the new user"
                        },
                        {
                            "paramType": "query",
                            "name": "password",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "password for the new user"
                        },
                        {
                            "paramType": "query",
                            "name": "display_name",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "display name for the new user"
                        }
                    ],
                    "notes": "Returns the authenticated user",
                    "authorizations": {}
                }
            ]
        },
        {
            "path": "/Auth/Capabilities",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns array of capabilities",
                    "nickname": "getCapabilities",
                    "type": "array",
                    "notes": "Get a list of all the capabilities"
                }
            ]
        },
        {
            "path": "/Auth/Group/Add",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Allows the user to create a new group and add them self to it",
                    "nickname": "addGroup",
                    "type": "Group",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "name",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "what you want to call the new group"
                        }
                    ],
                    "notes": "Returns the authenticated user"
                }
            ]
        },
        {
            "path": "/Auth/Group/{id}/Members",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get a list of users in a given group",
                    "nickname": "getMembers",
                    "type": "User",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "id",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "id of the group we want memberships for"
                        }
                    ],
                    "notes": "Returns array of users in a given group"
                }
            ]
        },
        {
            "path": "/Auth/Login",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Does a standard login with a given email & password",
                    "nickname": "login",
                    "type": "User",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "email",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "email of the user requesting authentication"
                        },
                        {
                            "paramType": "query",
                            "name": "password",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "password for the user requesting authentication"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Authentication Failed"
                        }
                    ],
                    "notes": "Returns the authenticated user",
                    "authorizations": {}
                }
            ]
        },
        {
            "path": "/Auth/Logout",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Logs the user out",
                    "nickname": "logout",
                    "type": "void",
                    "notes": "Tells the backend to remove access from your current auth token"
                }
            ]
        },
        {
            "path": "/Auth/PasswordReset",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Handles the password reset",
                    "nickname": "PasswordReset",
                    "type": "Void",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "email",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "email of the user requesting reset"
                        },
                        {
                            "paramType": "query",
                            "name": "activation_key",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "activation_key from password reset email"
                        },
                        {
                            "paramType": "query",
                            "name": "password",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "password for the user requesting reset"
                        },
                        {
                            "paramType": "query",
                            "name": "password_confirm",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "password confirmation entry"
                        }
                    ],
                    "notes": "This is the second half of the password reset.  Once the email has been sent with the reset token, you click on it and get a page requesting the new password.",
                    "authorizations": {}
                }
            ]
        },
        {
            "path": "/Auth/PasswordResetRequest",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Does a standard email password reset request",
                    "nickname": "passwordResetRequest",
                    "type": "void",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "email",
                            "type": "string",
                            "required": true,
                            "allowMultiple": false,
                            "description": "email of the user requesting password reset for"
                        }
                    ],
                    "notes": "Password reset request",
                    "authorizations": {}
                }
            ]
        },
        {
            "path": "/Auth/Role",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get the roles for the current group, access permitting",
                    "nickname": "getRole",
                    "type": "Role",
                    "notes": "Returns the list of roles"
                }
            ]
        },
        {
            "path": "/Auth/SessionCheck",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Use this to see if you are already logged in and get user details",
                    "nickname": "SessionCheck",
                    "type": "User",
                    "notes": "Returns the authenticated user"
                }
            ]
        },
        {
            "path": "/Auth/myGroups",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get a list of all the groups i'm a member of",
                    "nickname": "myGroups",
                    "type": "Group",
                    "notes": "Returns my group list"
                }
            ]
        }
    ],
    "models": {
        "User": {
            "id": "User",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "group_id": {
                    "description": "The users current group_id, in Molotov a user can be a member of multiple groups",
                    "type": "integer",
                    "format": "int64"
                },
                "enabled": {
                    "description": "User Status",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                        "0-disabled",
                        "1-enabled"
                    ]
                },
                "created": {
                    "description": "standard SQL timestamp in YYYY-MM-DD HH:MM:SS format",
                    "type": "string"
                },
                "group": {
                    "$ref": "Group"
                },
                "role": {
                    "$ref": "Role"
                }
            }
        },
        "Group": {
            "id": "Group",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Role": {
            "id": "Role",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "capabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "Capability"
                    }
                }
            }
        },
        "Capability": {
            "id": "Capability",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "capability": {
                    "type": "string"
                }
            }
        }
    }
}